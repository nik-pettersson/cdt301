Assumptions:
1. Conditionals without blocks are limited to one statement (as in C)
2. Conditionals without blocks can contain a combined if-else statement (exception to above)
3. A program must have at least one function (or is this semantics?)
4. Variables must be declared first in the function (not C99)
5. Relation operators can be chained, although the meaning will not be the same as
	mathematical chaining of relation operators (allowed in C)

prog	->	func funclst	// semantics or grammar?

funclst	->	func funclst
	|	e

func	->	type ID (params) body

params	->	VOID
	|	INT ID optpar

optpar	->	, INT ID optpar
	|	e

type	->	VOID
	|	INT

body	->	{ decl stmts }

decl	->	INT ID optpar ; decl
	|	e

stmts	->	stmt stmts
	|	stmt

stmt	->	if
	|	while
	|	assign ;
	|	call ;
	|	WRITE expr ;
	|	READ ID ;
	|	RETURN expr ;

if	->	IF ( expr ) { stmts } else
	|	IF ( expr ) stmt else

else	->	ELSE { stmts }
	|	ELSE stmt
	|	e

while	->	WHILE ( expr ) { stmts }
	|	WHILE ( expr ) stmt

assign	->	ID = expr

relat	->	expr RELOP expr

call	->	ID ( expr optexpr )
	|	ID ( )

optexpr	->	, expr
	|	e

expr	->	expr + term
	|	expr - term
	|	term

term	->	term * factor
	|	term / factor
	|	factor

factor	->	! factor
	|	call
	|	relat
	|	ID
	|	NUM
	|	( expr )
